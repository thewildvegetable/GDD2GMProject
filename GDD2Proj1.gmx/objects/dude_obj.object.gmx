<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_Infantry</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization
grav = 0.7;
hsp = 0;
vsp = 0;
jumpspeed = 10;
movespeed = 4;

batteryCharge = 10;//Ammo and reloading values
reloadSpeed = 0;
reloading = false;

grenadesAvailable = 3;//Number of grenades the player has

iFrames=false; // whether or not the player is blinking and invulnerable from a hit.
iFramesTimer = 0; // current number of frames left.
iFramesTimerMax = 30; // number of frames that the player is invulnerable for.
hitP=5;//the current hp
maxHP=5;//the max hp that the player can have
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.player_hp=200;
global.score=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take and React to Player Input (Movement)

//take
key_right = keyboard_check(ord("D"));
key_left = -keyboard_check(ord("A"));
key_jump = keyboard_check_pressed(vk_space);

//react
move = key_left + key_right;
hsp = move * movespeed;
if(vsp &lt; 10) vsp += grav;

if(place_meeting(x,y+1,obj_blackTerrain))
{
    vsp = key_jump * -jumpspeed;
}

//Horizontal Collision
if (place_meeting(x+hsp, y, obj_blackTerrain))
{
    while(!place_meeting(x+sign(hsp), y, obj_blackTerrain))
    {
        x += sign(hsp);
    }
    
    hsp = 0;
}
x += hsp;

//Vertical Collision
if (place_meeting(x, y+vsp, obj_blackTerrain))
{ 
   while(!place_meeting(x, y+sign(vsp), obj_blackTerrain))
    {
        y += sign(vsp);
    }
    
    vsp = 0;
}
y += vsp;

//draw_text(16,16,"Lives: " + lives);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ammo and Reloading Code

if(reloadSpeed &gt;= 45)
{
    reloading = false;
    batteryCharge = 10;
    reloadSpeed = 0;
}
if(reloading == true)
{
    reloadSpeed += 1;
}
if(batteryCharge &lt;= 0)
{
    reloading = true;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///iFrame timer


//If they are invulnerable and the timer hasn't run out yet, decrement it.
if(iFrames &amp;&amp; iFramesTimer&gt;0)
{
    iFramesTimer--;      
}
else if(iFramesTimer == 0){
    iFrames = false;
    iFramesTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="laser_beam_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the player is not invulnerable
if(iFrames == false){
//Take damage
    hitP--;
//Set the iframes timer to max
    iFramesTimer = iFramesTimerMax;
//You are now invulnerable
        iFrames = true;
    if(hitP&lt;=0)
        {
        lives--;
        room_restart(); 
        }
    }
else{
        //You're invulnerable currently.
    }



//if get health is working, do restart room. when live reaches 0 game reset
if(lives&lt;0)
{
game_restart(); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="turretBullet_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the player is not invulnerable
if(iFrames == false){
//Take damage
    hitP--;
//Set the iframes timer to max
    iFramesTimer = iFramesTimerMax;
//You are now invulnerable
        iFrames = true;
    if(hitP&lt;=0)
        {
        lives--;
        room_restart(); 
        }
    }
else{
        //You're invulnerable currently.
    }



//if get health is working, do restart room. when live reaches 0 game reset
if(lives&lt;0)
{
game_restart(); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="laserDroneBullet_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the player is not invulnerable
if(iFrames == false){
//Take damage
    hitP--;
//Set the iframes timer to max
    iFramesTimer = iFramesTimerMax;
//You are now invulnerable
        iFrames = true;
    if(hitP&lt;=0)
        {
        lives--;
        room_restart(); 
        }
    }
else{
        //You're invulnerable currently.
    }



//if get health is working, do restart room. when live reaches 0 game reset
if(lives&lt;0)
{
game_restart(); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="chaseEnemy_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the player is not invulnerable
if(iFrames == false){
//Take damage
    hitP--;
//Set the iframes timer to max
    iFramesTimer = iFramesTimerMax;
//You are now invulnerable
        iFrames = true;
    if(hitP&lt;=0)
        {
        lives--;
        room_restart(); 
        }
    }
else{
        //You're invulnerable currently.
    }



//if get health is working, do restart room. when live reaches 0 game reset
if(lives&lt;0)
{
game_restart(); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="chargeEnemy_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the player is not invulnerable
if(iFrames == false){
//Take damage
    hitP--;
//Set the iframes timer to max
    iFramesTimer = iFramesTimerMax;
//You are now invulnerable
        iFrames = true;
    if(hitP&lt;=0)
        {
        lives--;
        room_restart(); 
        }
    }
else{
        //You're invulnerable currently.
    }



//if get health is working, do restart room. when live reaches 0 game reset
if(lives&lt;0)
{
game_restart(); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="laserDrone">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the player is not invulnerable
if(iFrames == false){
//Take damage
    hitP--;
//Set the iframes timer to max
    iFramesTimer = iFramesTimerMax;
//You are now invulnerable
        iFrames = true;
    if(hitP&lt;=0)
        {
        lives--;
        room_restart();
        }
    }
else{
        //You're invulnerable currently.
    }



//if get health is working, do restart room. when live reaches 0 game reset
if(lives&lt;0)
{
game_restart(); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_exit_Door">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throwing Grenade
if(grenadesAvailable &gt; 0)
{
    grenade = instance_create(x,y,obj_grenade);  
    grenade.direction = point_direction(x,y,mouse_x,mouse_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Firing
if(reloading == false &amp;&amp; batteryCharge &gt; 0)
{
    bullet = instance_create(x,y,obj_blasterShot);  
    bullet.direction = point_direction(x,y,mouse_x,mouse_y);
    bullet.image_angle = point_direction(x,y,mouse_x,mouse_y);
    bullet.speed = 10;
    batteryCharge -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Early Reload Trigger

reloading = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
var perc;//the percent health to display
perc =(hitP/maxHP)*100;
draw_healthbar(x-16,y-32,x+16,y-28,perc,c_black,c_red,c_green,0,true,false);

var ammo;//the percent of ammo you have
ammo =(batteryCharge/10)*100;
draw_healthbar(x-16,y-42,x+16,y-38,ammo,c_black,c_blue,c_blue,0,true,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
